`timescale 1ns / 100ps

module test;

/*parameter BIT_SIZE = 31,
  EXP_SIZE = 7,
  MANT_SIZE = 22,
  BIAS = 127; // FULL NUMBER*/
parameter BIT_SIZE = 63,
    EXP_SIZE = 10,
    MANT_SIZE = 51,
    BIAS = 1023;

/*initial begin
  $dumpfile("TESTWAV32.vcd");
  $dumpvars(0,test);
end*/

initial begin
  $dumpfile("TESTWAV.vcd");
  $dumpvars(0,test);
end


reg clk = 0;

always #10 clk = !clk;

initial begin
  #1000 $finish;
end



wire [MANT_SIZE + 1:0]	fracta, fractb;
wire [EXP_SIZE:0]	exp_out;
wire sign, sign_exe, inf;
wire [1:0] exp_ovf;
wire [2:0] underflow;


reg [63:0] opa = 64'h4024000000000000;
reg [63:0] opb = 64'h402C000000000000;
/*
reg [31:0] opa = 32'h41200000;
reg [31:0] opb = 32'h41600000;
*/


reg [2:0] fpu_op = 2;

pre_norm_fmul #(.BIT_SIZE(BIT_SIZE), .EXP_SIZE(EXP_SIZE), .MANT_SIZE(MANT_SIZE), .BIAS(BIAS) )
                u1(clk, fpu_op, opa, opb, fracta, fractb, exp_out, sign, sign_exe, inf, exp_ovf, underflow);


wire	[(MANT_SIZE + 1) * 2 + 1:0]	prod;
mul_r2 #(.BIT_SIZE(BIT_SIZE), .EXP_SIZE(EXP_SIZE), .MANT_SIZE(MANT_SIZE) )
        u2(clk, fracta, fractb, prod);


always @ (posedge clk) begin

end


endmodule // test
